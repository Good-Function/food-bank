name: Food Bank CI/CD

on:
  push:
    paths:
      - "OperatorPortal/**"
      - .github/workflows/deploy-to-azure.yml
    branches:
      - main
defaults:
  run:
    working-directory: OperatorPortal 
env:
  IMAGE_NAME: operator-portal
  RESOURCE_GROUP: bzsoswaw
  
jobs:
  build:
    name: Test & Build -> Push to ACR
    runs-on: ubuntu-latest
    steps:
    - name: git checkout main branch
      uses: actions/checkout@v2
    - name: Setup .NET, because the default is 8.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'
    - name: Build
      run: dotnet build
    - name: Playwright
      run: pwsh Tests/bin/Debug/net9.0/playwright.ps1 install chromium --with-deps
    - name: Test
      run: dotnet test --logger html
    - name: Migrations pre
      if: always()
      run: cat Tests/bin/Debug/net9.0/migrations_pre.txt
    - name: Migrations status
      if: always()
      run: cat Tests/bin/Debug/net9.0/migrations_out.txt >> $GITHUB_OUTPUT
    - name: Migrations errors
      if: always()
      run: cat Tests/bin/Debug/net9.0/migrations_err.txt >> $GITHUB_OUTPUT
    - name: show containers
      if: always()
      run: docker ps
    - name: show tables
      if: always()
      run: docker exec foodbank_db psql -U postgres -d food_bank -c '\d'
    - name: "Login via Azure CLI"
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Log into registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.ACR_ENDPOINT }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - name: "build image"
      run: docker build . -t ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
    - name: "push image"
      run: docker push ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
# Deploy Bicep file
    - name: deploy
      id: deploy
      uses: azure/arm-deploy@v1
      with:
        resourceGroupName: bzsoswaw
        template: ./OperatorPortal/infra.bicep
        parameters: >
          image=${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          name=${{ env.IMAGE_NAME }}
          acrendpoint=${{ secrets.ACR_ENDPOINT }}
          acrlogin=${{ secrets.ACR_USERNAME }}
          acrpassword=${{ secrets.ACR_PASSWORD }}
        failOnStdErr: false

    - name: Get Outputs
      run: |
        echo "FQDN: ${{ steps.deploy.outputs.fqdn }}"
