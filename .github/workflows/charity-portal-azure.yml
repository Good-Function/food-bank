name: Charity Portal CI/CD

on:
  push:
    paths:
      - "CharityPortal/**"
      - .github/workflows/charity-portal-azure.yml
    branches:
      - main

defaults:
  run:
    working-directory: CharityPortal
env:
  IMAGE_NAME: charity-portal
  RESOURCE_GROUP: bzsoswaw
  ASPNETCORE_ENVIRONMENT: Development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build -v ./...
        working-directory: ./CharityPortal

      - name: Test
        run: go test -v ./...
        working-directory: ./CharityPortal

  deploy:
    name: Push to ACR & Deploy (main branch only)
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
  
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
  
      - name: Log into ACR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_ENDPOINT }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
  
      - name: Build Docker image
        run: docker build . -t ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
  
      - name: Push Docker image
        run: docker push ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
  
      - name: Deploy Bicep
        id: deploy
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          template: ./CharityPortal/infra.bicep
          parameters: >
            image=${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            name=${{ env.IMAGE_NAME }}
            acrendpoint=${{ secrets.ACR_ENDPOINT }}
            acrlogin=${{ secrets.ACR_USERNAME }}
            acrpassword=${{ secrets.ACR_PASSWORD }}
            dbAdminPassword=${{ secrets.DB_ADMIN_PASSWORD }}
            dbServerName=foodbank-postgres
            dbName=foodbankdb
            vnetName=foodbank-vnet
            subnetDbName=postgres-subnet
            subnetAppName=containerapp-subnet
          failOnStdErr: false
      - name: Show FQDN
        run: | 
          echo "FQDN: ${{ steps.deploy.outputs.fqdn }}"
