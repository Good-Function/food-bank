name: Operator Portal CI/CD

on:
  push:
    paths:
      - "OperatorPortal/**"
      - .github/workflows/operator-portal.yml
    branches:
      - main
  pull_request:
    paths:
      - "OperatorPortal/**"
      - .github/workflows/operator-portal.yml

defaults:
  run:
    working-directory: OperatorPortal 
env:
  IMAGE_NAME: operator-portal
  RESOURCE_GROUP: bzsoswaw
  ASPNETCORE_ENVIRONMENT: Development

jobs:
  test:
    name: Build & Test (all branches and PRs)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      - name: Build
        run: dotnet build
      - name: Playwright
        run: pwsh Tests/bin/Debug/net9.0/playwright.ps1 install chromium --with-deps
      - name: Test
        run: dotnet test --logger html

  deploy:
    name: Push to ACR & Deploy (main branch only)
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Log into ACR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_ENDPOINT }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build Docker image
        run: docker build . -t ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      - name: Push Docker image
        run: docker push ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      - name: Deploy Bicep
        id: deploy
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          template: ./OperatorPortal/infra.bicep
          parameters: >
            image=${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            name=${{ env.IMAGE_NAME }}
            acrendpoint=${{ secrets.ACR_ENDPOINT }}
            acrlogin=${{ secrets.ACR_USERNAME }}
            acrpassword=${{ secrets.ACR_PASSWORD }}
            msEntraClientSecret=${{ secrets.OPERATOR_PORTAL_ENTRA_CLIENT_SECRET }}
            dbAdminPassword=${{ secrets.DB_ADMIN_PASSWORD }}
            dbServerName=foodbank-postgres
            dbName=foodbankdb
            dbCharityUserPassword=${{ DB_CHARITY_USER_PASSWORD }}
            vnetName=foodbank-vnet
            subnetDbName=postgres-subnet
            subnetAppName=containerapp-subnet
          failOnStdErr: false
      - name: Show FQDN
        run: | 
          echo "FQDN: ${{ steps.deploy.outputs.fqdn }}"
